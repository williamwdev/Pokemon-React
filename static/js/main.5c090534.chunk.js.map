{"version":3,"sources":["PokemonList.js","Pagination.js","App.js","index.js"],"names":["PokemonList","pokemon","map","p","key","Pagination","goToNextPage","goToPrevPage","onClick","App","useState","setPokemon","currentPageUrl","setCurrentPageUrl","loading","setLoading","nextPageUrl","setNextPageUrl","prevPageUrl","setPrevPageUrl","useEffect","axios","get","cancelToken","CancelToken","c","then","res","data","next","previous","results","name","className","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4MAEe,SAASA,EAAT,GAAmC,IAAZC,EAAW,EAAXA,QACpC,OACE,6BACGA,EAAQC,KAAI,SAACC,GAAD,OACX,yBAAKC,IAAKD,GAAIA,OCJP,SAASE,EAAT,GAAqD,IAA/BC,EAA8B,EAA9BA,aAAcC,EAAgB,EAAhBA,aACjD,OACE,6BACGA,GAAgB,4BAAQC,QAASD,GAAjB,YAChBD,GAAgB,4BAAQE,QAASF,GAAjB,S,oBC2CRG,MA5Cf,WAAgB,IAAD,EACiBC,mBAAS,IAD1B,mBACNT,EADM,KACGU,EADH,OAE+BD,mBAC1C,qCAHW,mBAENE,EAFM,KAEUC,EAFV,OAKiBH,oBAAS,GAL1B,mBAKNI,EALM,KAKGC,EALH,OAMyBL,qBANzB,mBAMNM,EANM,KAMOC,EANP,OAOyBP,qBAPzB,mBAONQ,EAPM,KAOOC,EAPP,KA+Bb,OAtBAC,qBAAU,WACRL,GAAW,GAEXM,IACGC,IAAIV,EAAgB,CACnBW,YAAa,IAAIF,IAAMG,aAAY,SAAAC,GAAC,OAAaA,OAElDC,MAAK,SAACC,GACLZ,GAAW,GACXE,EAAeU,EAAIC,KAAKC,MACxBV,EAAeQ,EAAIC,KAAKE,UACxBnB,EAAWgB,EAAIC,KAAKG,QAAQ7B,KAAI,SAAAC,GAAC,OAAIA,EAAE6B,cAE1C,CAACpB,IASAE,EAAgB,sBAGlB,yBAAKmB,UAAU,OACb,kBAACjC,EAAD,CAAaC,QAASA,IACtB,kBAACI,EAAD,CACEC,aAAcU,EAbpB,WACEH,EAAkBG,IAY6B,KAC3CT,aAAcW,EAXpB,WACEL,EAAkBK,IAU6B,SCvCnDgB,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.5c090534.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport default function PokemonList({ pokemon }) {\r\n  return (\r\n    <div>\r\n      {pokemon.map((p) => (\r\n        <div key={p}>{p}</div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Pagination({ goToNextPage, goToPrevPage }) {\r\n  return (\r\n    <div>\r\n      {goToPrevPage && <button onClick={goToPrevPage}>Previous</button>}\r\n      {goToNextPage && <button onClick={goToNextPage}>Next</button>}\r\n    </div>\r\n  )\r\n}\r\n","import React, { useState, useEffect } from \"react\";\nimport PokemonList from \"./PokemonList\";\nimport Pagination from \"./Pagination\";\nimport axios from \"axios\";\n\nfunction App() {\n  const [pokemon, setPokemon] = useState([]);\n  const [currentPageUrl, setCurrentPageUrl] = useState(\n    \"https://pokeapi.co/api/v2/pokemon\"\n  );\n  const [loading, setLoading] = useState(true);\n  const [nextPageUrl, setNextPageUrl] = useState();\n  const [prevPageUrl, setPrevPageUrl] = useState();\n\n  useEffect(() => {\n    setLoading(true);\n    let cancel;\n    axios\n      .get(currentPageUrl, {\n        cancelToken: new axios.CancelToken(c => cancel = c)\n      })\n      .then((res) => {\n        setLoading(false);\n        setNextPageUrl(res.data.next);\n        setPrevPageUrl(res.data.previous);\n        setPokemon(res.data.results.map(p => p.name));\n      });\n  }, [currentPageUrl]);\n\n  function goToNextPage() {\n    setCurrentPageUrl(nextPageUrl);\n  }\n  function goToPrevPage() {\n    setCurrentPageUrl(prevPageUrl);\n  }\n\n  if (loading) return \"Loading Pokemons...\";\n\n  return (\n    <div className=\"App\">\n      <PokemonList pokemon={pokemon} />\n      <Pagination\n        goToNextPage={nextPageUrl ? goToNextPage : null}\n        goToPrevPage={prevPageUrl ? goToPrevPage : null}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}